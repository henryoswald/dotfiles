set nocompatible            " Turn off vi compatibility mode
filetype off                " Interferes with Pathogen, so turn off
call pathogen#helptags()    " Generate help tags for plugins
call pathogen#infect()      " Load all the plugins
filetype on                 " Reenable filetype
filetype indent on
filetype plugin on

" Directories for swp files
set backupdir=~/.vim/backup
set directory=~/.vim/backup

" Searching
set hlsearch
set incsearch
set ignorecase
set smartcase

"turn numbers on
set number

" Tab completion
set wildmode=list:longest,list:full
set wildignore+=*.o,*.obj,.git,*.rbc,*.class,.svn,vendor/gems/*,node_modules/*

" Without setting this, ZoomWin restores windows in a way that causes
" equalalways behavior to be triggered the next time CommandT is used.
" This is likely a bludgeon to solve some other issue, but it works
set noequalalways

"set leader
let mapleader=","

" ZoomWin configuration
map <Leader><Leader> :ZoomWin<CR>

" Remember last location in file
if has("autocmd")
  au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$")
    \| exe "normal g'\"" | endif
endif

set visualbell

" Inserts the path of the currently edited file into a command
" Command mode: Ctrl+P
cmap <C-P> <C-R>=expand("%:p:h") . "/" <CR>

" Fast editing of the .vimrc
map <leader>v :e! ~/.vimrc<cr>

" When vimrc is edited, reload it
autocmd! bufwritepost vimrc source ~/.vim/vimrc

"NERDTree configuration
let NERDTreeIgnore=['\.rbc$', '\~$']
map <Leader>n :NERDTreeToggle<CR>
let NERDTreeShowBookmarks=1

"ctlp i.e. commandT replacement
map <Leader>t :CtrlP<Enter>

"for toggling tagbar
nmap <Leader>m :TagbarToggle<CR>

"resize windows
if bufwinnr(1)
  map + <C-W>+
  map - <C-W>-
  map < <C-W><
  map > <C-W>>
endif


"color
color Tomorrow-Night

"anti analysed on
set anti

"set font if macvim
if has("gui_macvim")
  set gfn=Monaco:h13
endif

"hide tool bar and scroll bar
set guioptions-=T
set guioptions-=L
set guioptions-=r"

" MacVIM shift+arrow-keys behavior (required in .vimrc)
let macvim_hig_shift_movement = 1


"Enable syntastic syntax checking
let g:syntastic_enable_signs=1
let g:syntastic_quiet_warnings=1"

"NERDcommenter configuration
"toggle = leader c space

"surround
"cs'<tag>  = 'this' -> <tag>this</tag>
"cst' = <tag>this</tag> -> 'this'


if has("autocmd")
   " Enable file type detection
   filetype on
  
   autocmd FileType make setlocal ts=8 sts=8 sw=8 noexpandtab
   autocmd FileType yaml setlocal ts=2 sts=2 sw=2 expandtab
   autocmd FileType coffee setlocal ts=4 sts=4 sw=4 expandtab
   autocmd FileType html setlocal ts=4 sts=4 sw=4 expandtab
   autocmd FileType css setlocal ts=2 sts=2 sw=2 expandtab
   autocmd FileType javascript setlocal ts=2 sts=2 sw=2 expandtab
   autocmd FileType jade setlocal ts=2 sts=2 sw=2 expandtab
   autocmd FileType scss setlocal ts=2 sts=2 sw=2 expandtab
   au BufRead,BufNewFile *.tex setf tex

   " Treat .rdf files as XML
   autocmd BufNewFile,BufRead *.rdf setfiletype xml
 endif
